# wandb
wandb:
  name: "res50_112_ce"  # Optional, could be left empty for random name
  project: "hw2p2-crop"
  wandb_api_key: "46b9373c96fe8f8327255e7da8a4046da7ffeef6"

# folder path
data_dir: "./data/11-785-f24-hw2p2-verification/cls_data"
data_ver_dir: "./data/11-785-f24-hw2p2-verification/ver_data"
val_pairs_file: "./data/11-785-f24-hw2p2-verification/val_pairs.txt"
test_pairs_file: './data/11-785-f24-hw2p2-verification/test_pairs.txt'
checkpoint_dir: "./checkpoints"



resume:
  resume: false
  id: '1727761635'


# Parameters
batch_size: 64
epochs: 100
e: 0

# 损失函数配置
loss:
  cross_entropy:
    smoothing: 0.1  # label smoothing for CrossEntropy
    enabled: true   # 是否启用交叉熵损失
  triplet:
    margin: 1.0  # Triplet Loss margin
    swap: true
    alpha: 0.5
    beta: 1
    enabled: false   # 是否启用Triplet损失
  arcface:
    s: 64.0  # ArcFace scale parameter
    m: 28.6   # ArcFace margin parameter
    alpha: 0.8
    beta: 1
    enabled: false  # 是否启用ArcFace损失


use_mixed_loss: false
optimizer:
  type: 'AdamW'  # 'AdamW' or 'SGD'
  lr: 0.01
  lr_feature_extraction: 0.001
  lr_classification: 0.0001
  weight_decay: 0.01

# Scheduler parameters
scheduler:
  feature:
    type: 'CosineAnnealingLR'  # 'CosineAnnealingLR' or 'CosineAnnealingWarmRestarts'
    T_max: 100  # For CosineAnnealingLR
    eta_min: 0  # 最小学习率
    T_0: 10 # For CosineAnnealingWarmRestarts
    T_mult: 2 # For CosineAnnealingWarmRestarts

  classifier:
    type: 'CosineAnnealingLR'  # 'CosineAnnealingLR' or 'CosineAnnealingWarmRestarts'
    T_max: 100  # For CosineAnnealingLR
    eta_min: 0  # 最小学习率
    T_0: 10 # For CosineAnnealingWarmRestarts
    T_mult: 2 # For CosineAnnealingWarmRestarts

  type: 'CosineAnnealingLR'  # 'CosineAnnealingLR' or 'CosineAnnealingWarmRestarts'
  T_max: 100  # For CosineAnnealingLR
  eta_min: 0  # 最小学习率
  T_0: 10 # For CosineAnnealingWarmRestarts
  T_mult: 2 # For CosineAnnealingWarmRestarts

